(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     88828,       2195]
NotebookOptionsPosition[     84975,       2078]
NotebookOutlinePosition[     86579,       2128]
CellTagsIndexPosition[     86251,       2116]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Calculating 24", "DemoTitle",
 CellChangeTimes->{
  3.35696210375764*^9, {3.4476856512477903`*^9, 3.4476856532634277`*^9}}],

Cell["", "InitializationSection"],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"aa", ",", "bb", ",", "cc", ",", "dd"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"aa", "=", 
       RowBox[{"card", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "a"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"bb", "=", 
       RowBox[{"card", "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "b"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cc", "=", 
       RowBox[{"card", "[", 
        RowBox[{"{", 
         RowBox[{"3", ",", "c"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dd", "=", 
       RowBox[{"card", "[", 
        RowBox[{"{", 
         RowBox[{"4", ",", "d"}], "}"}], "]"}]}], ";", 
      RowBox[{"Text", "@", 
       RowBox[{"Pane", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"outform", ",", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{
               RowBox[{"Apply", "[", 
                RowBox[{"Union", ",", 
                 RowBox[{"f", "@@@", 
                  RowBox[{"Tuples", "[", 
                   RowBox[{"{", 
                    RowBox[{"ops", ",", 
                    RowBox[{"Permutations", "[", 
                    RowBox[{"{", 
                    RowBox[{"aa", ",", "bb", ",", "cc", ",", "dd"}], "}"}], 
                    "]"}]}], "}"}], "]"}]}]}], "]"}], ",", "same"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", "Right", "}"}]}]}], "]"}], ",", 
         RowBox[{"Alignment", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Center", ",", "Automatic"}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"360", ",", "250"}], "}"}]}], ",", 
         RowBox[{"Scrollbars", "\[Rule]", "True"}]}], "]"}]}]}]}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "3"}], "}"}], ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{
                RowBox[{"First", "[", "#2", "]"}], ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"allSuit", "[", "1", "]"}]}], "]"}], ",", 
           RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], "]"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"b", ",", "3"}], "}"}], ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{
                RowBox[{"First", "[", "#2", "]"}], ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"allSuit", "[", "2", "]"}]}], "]"}], ",", 
           RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], "]"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c", ",", "7"}], "}"}], ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{
                RowBox[{"First", "[", "#2", "]"}], ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"allSuit", "[", "3", "]"}]}], "]"}], ",", 
           RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], "]"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"d", ",", "7"}], "}"}], ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{
                RowBox[{"First", "[", "#2", "]"}], ",", "#1"}], "]"}], "&"}], 
             ",", 
             RowBox[{"allSuit", "[", "4", "]"}]}], "]"}], ",", 
           RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], "]"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"SynchronousInitialization", "\[Rule]", "False"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"outform", "[", "a_", "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "@", 
          RowBox[{"Style", "[", 
           RowBox[{"a", ",", "Bold", ",", "24"}], "]"}]}], ",", " ", 
         RowBox[{"Text", "@", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<=\>\"", ",", "24", ",", "Bold", ",", "Gray"}], 
           "]"}]}], ",", 
         RowBox[{"Text", "@", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<24\>\"", ",", "24", ",", "Bold", ",", "Blue"}], 
           "]"}]}]}], "}"}]}], ";", 
      RowBox[{
       RowBox[{"cardpicture", "[", 
        RowBox[{"{", 
         RowBox[{"suit_", ",", "val_"}], "}"}], "]"}], ":=", 
       RowBox[{"Framed", "[", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"val", ",", "suit"}], "}"}], ",", "Center", ",", "0", ",", 
          RowBox[{"ItemStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"24", ",", "\"\<Label\>\"", ",", "Bold", ",", 
             RowBox[{"Switch", "[", 
              RowBox[{"suit", ",", " ", 
               RowBox[{"\[HeartSuit]", "|", " ", "\[DiamondSuit]"}], ",", " ", 
               RowBox[{"Darker", "[", 
                RowBox[{"Red", ",", " ", "0.2"}], "]"}], ",", " ", 
               RowBox[{"\[ClubSuit]", "|", " ", "\[SpadeSuit]"}], ",", " ", 
               "Black"}], "]"}]}], "]"}]}]}], "]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"symsuit", "[", "n_", "]"}], ":=", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "n", ",", "1", ",", "\[HeartSuit]", ",", "2", ",", "\[DiamondSuit]", 
         ",", "3", ",", "\[ClubSuit]", ",", "4", ",", "\[SpadeSuit]"}], 
        "]"}]}], ";", 
      RowBox[{
       RowBox[{"symval", "[", "n_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"n", "\[LessEqual]", "10"}], "&&", 
          RowBox[{"n", ">", "1"}]}], ",", "n", ",", 
         RowBox[{"Switch", "[", 
          RowBox[{
          "n", ",", "1", ",", "A", ",", "11", ",", "J", ",", "12", ",", "Q", 
           ",", "13", ",", "K", ",", "_", ",", "Error"}], "]"}]}], "]"}]}], 
      ";", 
      RowBox[{
       RowBox[{"Format", "[", 
        RowBox[{
         RowBox[{"card", "[", 
          RowBox[{"{", 
           RowBox[{"s_", ",", "v_"}], "}"}], "]"}], ",", "StandardForm"}], 
        "]"}], ":=", 
       RowBox[{"cardpicture", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"symsuit", "[", "s", "]"}], ",", 
          RowBox[{"symval", "[", "v", "]"}]}], "}"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"allSuit", "[", "i_", "]"}], ":=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"card", "[", 
          RowBox[{"{", 
           RowBox[{"i", ",", "j"}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "13"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ops", "=", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Plus", ",", "Subtract", ",", "Times", ",", "Divide"}], 
          "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"eval", "[", "a_", "]"}], ":=", 
       RowBox[{"a", " ", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"card", "[", 
           RowBox[{"{", 
            RowBox[{"x_", ",", "y_"}], "}"}], "]"}], "\[Rule]", "y"}], 
         "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rules", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Times", "\[Rule]", "times"}], ",", 
         RowBox[{"Subtract", "\[Rule]", "subtract"}], ",", 
         RowBox[{"Plus", "\[Rule]", "plus"}], ",", 
         RowBox[{"Divide", "\[Rule]", "divide"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SetAttributes", "[", 
       RowBox[{"times", ",", 
        RowBox[{"{", 
         RowBox[{"Flat", ",", "Orderless", ",", "OneIdentity"}], "}"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"SetAttributes", "[", 
       RowBox[{"plus", ",", 
        RowBox[{"{", 
         RowBox[{"Flat", ",", "Orderless", ",", "OneIdentity"}], "}"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"divide", "[", 
        RowBox[{"a_", ",", "1"}], "]"}], ":=", 
       RowBox[{"times", "[", 
        RowBox[{"a", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"divide", "[", 
        RowBox[{"a_", ",", 
         RowBox[{"divide", "[", 
          RowBox[{"1", ",", "b_"}], "]"}]}], "]"}], ":=", 
       RowBox[{"times", "[", 
        RowBox[{"1", ",", "a", ",", "b"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"plus", "[", 
        RowBox[{"b_", ",", 
         RowBox[{"times", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "c_"}], "]"}]}], "]"}], " ", ":=", 
       RowBox[{"plus", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"same", "[", 
        RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"eval", "[", 
         RowBox[{"a", "/.", "rules"}], "]"}], "===", 
        RowBox[{"eval", "[", 
         RowBox[{"b", "/.", "rules"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Unprotect", "[", 
       RowBox[{"Divide", ",", "Times", ",", "Plus"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Divide", "[", 
        RowBox[{"a_", ",", 
         RowBox[{"card", "[", 
          RowBox[{"{", 
           RowBox[{"b_", ",", "1"}], "}"}], "]"}]}], "]"}], ":=", 
       RowBox[{"Times", "[", 
        RowBox[{"a", ",", 
         RowBox[{"card", "[", 
          RowBox[{"{", 
           RowBox[{"b", ",", "1"}], "}"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Times", "[", 
        RowBox[{"a_", ",", 
         RowBox[{"1", "/", 
          RowBox[{"card", "[", 
           RowBox[{"{", 
            RowBox[{"c_", ",", "1"}], "}"}], "]"}]}]}], "]"}], ":=", 
       RowBox[{"Times", "[", 
        RowBox[{"a", ",", 
         RowBox[{"card", "[", 
          RowBox[{"{", 
           RowBox[{"c", ",", "1"}], "}"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Times", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"card", "[", 
           RowBox[{"{", 
            RowBox[{"c_", ",", "1"}], "}"}], "]"}]}], ",", "a_"}], "]"}], ":=", 
       RowBox[{"Times", "[", 
        RowBox[{"a", ",", 
         RowBox[{"card", "[", 
          RowBox[{"{", 
           RowBox[{"c", ",", "1"}], "}"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Times", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"card", "[", 
          RowBox[{"{", 
           RowBox[{"s1_", ",", "a_"}], "}"}], "]"}], ",", 
         RowBox[{"Plus", "[", 
          RowBox[{
           RowBox[{"card", "[", 
            RowBox[{"{", 
             RowBox[{"s2_", ",", "b_"}], "}"}], "]"}], ",", 
           RowBox[{"Times", "[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"card", "[", 
              RowBox[{"{", 
               RowBox[{"s3_", ",", "c_"}], "}"}], "]"}]}], "]"}]}], "]"}]}], 
        "]"}], ":=", "\[IndentingNewLine]", 
       RowBox[{"Times", "[", 
        RowBox[{
         RowBox[{"card", "[", 
          RowBox[{"{", 
           RowBox[{"s1", ",", "a"}], "}"}], "]"}], ",", 
         RowBox[{"Plus", "[", 
          RowBox[{
           RowBox[{"card", "[", 
            RowBox[{"{", 
             RowBox[{"s3", ",", "c"}], "}"}], "]"}], ",", 
           RowBox[{"Times", "[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"card", "[", 
              RowBox[{"{", 
               RowBox[{"s2", ",", "b"}], "}"}], "]"}]}], "]"}]}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Protect", "[", 
       RowBox[{"Divide", ",", "Times", ",", "Plus"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"op1_", ",", "op2_", ",", "op3_"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "}"}]}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ans", "=", 
           RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"eval", "[", 
               RowBox[{"op1", "[", 
                RowBox[{
                 RowBox[{"op2", "[", 
                  RowBox[{
                   RowBox[{"op3", "[", 
                    RowBox[{"a", ",", "b"}], "]"}], ",", "c"}], "]"}], ",", 
                 "d"}], "]"}], "]"}], "]"}], "===", "24"}], ",", 
            RowBox[{"ans", "=", 
             RowBox[{"Union", "[", 
              RowBox[{"ans", ",", 
               RowBox[{"{", 
                RowBox[{"op1", "[", 
                 RowBox[{
                  RowBox[{"op2", "[", 
                   RowBox[{
                    RowBox[{"op3", "[", 
                    RowBox[{"a", ",", "b"}], "]"}], ",", "c"}], "]"}], ",", 
                  "d"}], "]"}], "}"}]}], "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"eval", "[", 
               RowBox[{"op1", "[", 
                RowBox[{
                 RowBox[{"op2", "[", 
                  RowBox[{"a", ",", "b"}], "]"}], ",", 
                 RowBox[{"op3", "[", 
                  RowBox[{"c", ",", "d"}], "]"}]}], "]"}], "]"}], "]"}], "===",
              "24"}], ",", 
            RowBox[{"ans", "=", 
             RowBox[{"Union", "[", 
              RowBox[{"ans", ",", 
               RowBox[{"{", 
                RowBox[{"op1", "[", 
                 RowBox[{
                  RowBox[{"op2", "[", 
                   RowBox[{"a", ",", "b"}], "]"}], ",", 
                  RowBox[{"op3", "[", 
                   RowBox[{"c", ",", "d"}], "]"}]}], "]"}], "}"}]}], 
              "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"eval", "[", 
               RowBox[{"op1", "[", 
                RowBox[{
                 RowBox[{"op2", "[", 
                  RowBox[{"a", ",", 
                   RowBox[{"op3", "[", 
                    RowBox[{"b", ",", "c"}], "]"}]}], "]"}], ",", "d"}], 
                "]"}], "]"}], "]"}], "===", "24"}], ",", 
            RowBox[{"ans", "=", 
             RowBox[{"Union", "[", 
              RowBox[{"ans", ",", 
               RowBox[{"{", 
                RowBox[{"op1", "[", 
                 RowBox[{
                  RowBox[{"op2", "[", 
                   RowBox[{"a", ",", 
                    RowBox[{"op3", "[", 
                    RowBox[{"b", ",", "c"}], "]"}]}], "]"}], ",", "d"}], 
                 "]"}], "}"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"eval", "[", 
               RowBox[{"op1", "[", 
                RowBox[{"a", ",", 
                 RowBox[{"op2", "[", 
                  RowBox[{"b", ",", 
                   RowBox[{"op3", "[", 
                    RowBox[{"c", ",", "d"}], "]"}]}], "]"}]}], "]"}], "]"}], 
              "]"}], "===", "24"}], ",", 
            RowBox[{"ans", "=", 
             RowBox[{"Union", "[", 
              RowBox[{"ans", ",", 
               RowBox[{"{", 
                RowBox[{"op1", "[", 
                 RowBox[{"a", ",", 
                  RowBox[{"op2", "[", 
                   RowBox[{"b", ",", 
                    RowBox[{"op3", "[", 
                    RowBox[{"c", ",", "d"}], "]"}]}], "]"}]}], "]"}], "}"}]}],
               "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", "ans"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
     ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.35696210375764*^9, 3.447684475302764*^9, {3.4476845694908667`*^9, 
   3.447684582365949*^9}, {3.4476848529614315`*^9, 3.4476848628208694`*^9}, {
   3.4476848936335664`*^9, 3.4476850496970654`*^9}, {3.447685343245819*^9, 
   3.447685347433346*^9}, {3.4476888987060738`*^9, 3.4476889026123486`*^9}, 
   3.447689285333548*^9, {3.447763954083541*^9, 3.4477639591616983`*^9}, {
   3.4477647591355686`*^9, 3.4477647597605724`*^9}, {3.44776479302641*^9, 
   3.4477647941201673`*^9}, 3.44776488598013*^9, {3.44776494841803*^9, 
   3.4477649557149515`*^9}, {3.447765004418388*^9, 3.4477650101215496`*^9}, {
   3.4477653778895283`*^9, 3.447765413967884*^9}, {3.4477655604375715`*^9, 
   3.447765560640698*^9}, {3.4477656410943375`*^9, 3.4477656416568413`*^9}, {
   3.4477656774851956`*^9, 3.4477656790945807`*^9}, {3.447765764688879*^9, 
   3.4477657669545183`*^9}, {3.447765824392386*^9, 3.4477658567675934`*^9}, 
   3.4477661353787513`*^9, {3.447766353020769*^9, 3.4477663552707834`*^9}, {
   3.4477664129742775`*^9, 3.4477664894278917`*^9}, {3.4477665646627483`*^9, 
   3.447766594928567*^9}, {3.447766652788313*^9, 3.447766679569734*^9}, {
   3.447766732882575*^9, 3.447766733304453*^9}, {3.447767724920174*^9, 
   3.447767727482691*^9}, 3.4477677709048433`*^9, {3.4477680473128624`*^9, 
   3.447768057609803*^9}, {3.4477681717667837`*^9, 3.4477681888918934`*^9}, {
   3.4477682255796285`*^9, 3.447768261564234*^9}, {3.507651597106345*^9, 
   3.5076518233889713`*^9}, {3.5076521408807173`*^9, 
   3.5076521688645153`*^9}, {3.507652200538683*^9, 3.507652228973526*^9}, {
   3.5076525797546005`*^9, 3.507652650989723*^9}, {3.507652783021925*^9, 
   3.5076529021588373`*^9}, {3.507652945328154*^9, 3.5076529489235134`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 3, $CellContext`b$$ = 
    3, $CellContext`c$$ = 7, $CellContext`d$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 3}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[1]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`b$$], 3}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[2]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`c$$], 7}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[3]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`d$$], 7}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[4]], SynchronousUpdating -> False]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2], 
         Manipulate`Place[3], 
         Manipulate`Place[4]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 3, $CellContext`b$$ = 
        3, $CellContext`c$$ = 7, $CellContext`d$$ = 7}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`aa$, $CellContext`bb$, $CellContext`cc$, \
$CellContext`dd$}, $CellContext`aa$ = $CellContext`card[{
           1, $CellContext`a$$}]; $CellContext`bb$ = $CellContext`card[{
           2, $CellContext`b$$}]; $CellContext`cc$ = $CellContext`card[{
           3, $CellContext`c$$}]; $CellContext`dd$ = $CellContext`card[{
           4, $CellContext`d$$}]; Text[
          Pane[
           Grid[
            Map[$CellContext`outform, 
             DeleteDuplicates[
              Apply[Union, 
               Apply[$CellContext`f, 
                Tuples[{$CellContext`ops, 
                  
                  Permutations[{$CellContext`aa$, $CellContext`bb$, \
$CellContext`cc$, $CellContext`dd$}]}], {1}]], $CellContext`same]], 
            Alignment -> {Right}], Alignment -> {Center, Automatic}, 
           ImageSize -> {360, 250}, Scrollbars -> True]]], 
      "Specifications" :> {{{$CellContext`a$$, 3}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[1]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         1}, {{$CellContext`b$$, 3}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[2]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         2}, {{$CellContext`c$$, 7}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[3]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         3}, {{$CellContext`d$$, 7}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[4]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 4}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          Manipulate`Place[4]}]}, 
      "Options" :> {SynchronousInitialization -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{409., {189., 194.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`outform[
         Pattern[$CellContext`a, 
          Blank[]]] := {
         Text[
          Style[$CellContext`a, Bold, 24]], 
         Text[
          Style["=", 24, Bold, Gray]], 
         Text[
          Style["24", 24, Bold, Blue]]}; $CellContext`cardpicture[{
          Pattern[$CellContext`suit, 
           Blank[]], 
          Pattern[$CellContext`val, 
           Blank[]]}] := Framed[
         Column[{$CellContext`val, $CellContext`suit}, Center, 0, ItemStyle -> 
          Directive[24, "Label", Bold, 
            Switch[$CellContext`suit, 
             
             Alternatives[$CellContext`\[HeartSuit], $CellContext`\
\[DiamondSuit]], 
             Darker[Red, 0.2], 
             
             Alternatives[$CellContext`\[ClubSuit], \
$CellContext`\[SpadeSuit]], Black]]]]; $CellContext`symsuit[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Switch[$CellContext`n, 1, $CellContext`\[HeartSuit], 
         2, $CellContext`\[DiamondSuit], 3, $CellContext`\[ClubSuit], 
         4, $CellContext`\[SpadeSuit]]; $CellContext`symval[
         Pattern[$CellContext`n, 
          Blank[]]] := If[
         And[$CellContext`n <= 10, $CellContext`n > 1], $CellContext`n, 
         Switch[$CellContext`n, 1, $CellContext`A, 11, $CellContext`J, 
          12, $CellContext`Q, 13, K, 
          Blank[], $CellContext`Error]]; Format[
         $CellContext`card[{
           Pattern[$CellContext`s, 
            Blank[]], 
           Pattern[$CellContext`v, 
            Blank[]]}], StandardForm] := $CellContext`cardpicture[{
          $CellContext`symsuit[$CellContext`s], 
          $CellContext`symval[$CellContext`v]}]; $CellContext`allSuit[
         Pattern[$CellContext`i, 
          Blank[]]] := Table[
         $CellContext`card[{$CellContext`i, $CellContext`j}], {$CellContext`j,
           1, 13}]; $CellContext`ops = 
       Tuples[{Plus, Subtract, Times, Divide}, {3}]; $CellContext`eval[
         Pattern[$CellContext`a, 
          Blank[]]] := ReplaceAll[$CellContext`a, {$CellContext`card[{
             Pattern[$CellContext`x, 
              Blank[]], 
             Pattern[$CellContext`y, 
              Blank[]]}] -> $CellContext`y}]; $CellContext`rules = {
        Times -> $CellContext`times, Subtract -> $CellContext`subtract, 
         Plus -> $CellContext`plus, Divide -> $CellContext`divide}; 
      SetAttributes[$CellContext`times, {Flat, Orderless, OneIdentity}]; 
      SetAttributes[$CellContext`plus, {
        Flat, Orderless, OneIdentity}]; $CellContext`divide[
         Pattern[$CellContext`a, 
          Blank[]], 1] := $CellContext`times[$CellContext`a, 
         1]; $CellContext`divide[
         Pattern[$CellContext`a, 
          Blank[]], 
         $CellContext`divide[1, 
          Pattern[$CellContext`b, 
           Blank[]]]] := $CellContext`times[
        1, $CellContext`a, $CellContext`b]; $CellContext`plus[
         Pattern[$CellContext`b, 
          Blank[]], 
         $CellContext`times[-1, 
          Pattern[$CellContext`c, 
           Blank[]]]] := $CellContext`plus[]; $CellContext`same[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]]] := $CellContext`eval[
          
          ReplaceAll[$CellContext`a, $CellContext`rules]] === \
$CellContext`eval[
          ReplaceAll[$CellContext`b, $CellContext`rules]]; 
      Unprotect[Divide, Times, Plus]; Pattern[$CellContext`a, 
          Blank[]]/$CellContext`card[{
          Pattern[$CellContext`b, 
           Blank[]], 
          1}] := $CellContext`a $CellContext`card[{$CellContext`b, 1}]; 
      Pattern[$CellContext`a, 
          Blank[]] (1/$CellContext`card[{
           Pattern[$CellContext`c, 
            Blank[]], 
           1}]) := $CellContext`a $CellContext`card[{$CellContext`c, 1}]; (
         1/$CellContext`card[{
           Pattern[$CellContext`c, 
            Blank[]], 1}]) Pattern[$CellContext`a, 
          Blank[]] := $CellContext`a $CellContext`card[{$CellContext`c, 
           1}]; (-$CellContext`card[{
            Pattern[$CellContext`s1, 
             Blank[]], 
            Pattern[$CellContext`a, 
             Blank[]]}]) ($CellContext`card[{
            Pattern[$CellContext`s2, 
             Blank[]], 
            Pattern[$CellContext`b, 
             Blank[]]}] - $CellContext`card[{
           Pattern[$CellContext`s3, 
            Blank[]], 
           Pattern[$CellContext`c, 
            
            Blank[]]}]) := $CellContext`card[{$CellContext`s1, \
$CellContext`a}] ($CellContext`card[{$CellContext`s3, $CellContext`c}] - \
$CellContext`card[{$CellContext`s2, $CellContext`b}]); 
      Protect[Divide, Times, Plus]; $CellContext`f[{
          Pattern[$CellContext`op1, 
           Blank[]], 
          Pattern[$CellContext`op2, 
           Blank[]], 
          Pattern[$CellContext`op3, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]], 
          Pattern[$CellContext`d, 
           Blank[]]}] := Module[{$CellContext`ans = {}}, If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[
                $CellContext`op3[$CellContext`a, $CellContext`b], \
$CellContext`c], $CellContext`d]]] === 24, $CellContext`ans = 
           Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[
                $CellContext`op3[$CellContext`a, $CellContext`b], \
$CellContext`c], $CellContext`d]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, $CellContext`b], 
               $CellContext`op3[$CellContext`c, $CellContext`d]]]] === 
           24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, $CellContext`b], 
               $CellContext`op3[$CellContext`c, $CellContext`d]]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, 
                $CellContext`op3[$CellContext`b, $CellContext`c]], \
$CellContext`d]]] === 24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, 
                $CellContext`op3[$CellContext`b, $CellContext`c]], \
$CellContext`d]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[$CellContext`a, 
               $CellContext`op2[$CellContext`b, 
                $CellContext`op3[$CellContext`c, $CellContext`d]]]]] === 
           24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[$CellContext`a, 
               $CellContext`op2[$CellContext`b, 
                $CellContext`op3[$CellContext`c, $CellContext`d]]]}]]; \
$CellContext`ans]; Null); Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->33562932]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
The rule is simple: pick any four cards and try to get a result of 24 from \
the numbers on the cards, using only the four basic arithmetic operations: \
addition (+), subtraction (-), multiplication (*), and division (/). \
\>", "ManipulateCaption",
 CellChangeTimes->{
  3.35696210375764*^9, {3.447685713216937*^9, 3.4476857385139737`*^9}, {
   3.447685771420434*^9, 3.447685771436059*^9}, {3.4489786581181498`*^9, 
   3.448978694399632*^9}, {3.4489787611344337`*^9, 3.448978792822137*^9}},
 CellID->45445021],

Cell["\<\
Jack (J), Queen (Q), King (K), and Ace (A) represent 11, 12, 13, and 1 \
respectively.\
\>", "ManipulateCaption",
 CellChangeTimes->{
  3.35696210375764*^9, {3.447685713216937*^9, 3.4476857385139737`*^9}, {
   3.447685771420434*^9, 3.447685771436059*^9}, {3.4489786581181498`*^9, 
   3.4489786904152317`*^9}, 3.4489787319936223`*^9},
 CellID->48921836],

Cell[TextData[{
 "For example, given numbers 2, 3, 5 and 8, we can get such an expression: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"8", "+", 
     RowBox[{"2", "\[Times]", 
      RowBox[{"(", 
       RowBox[{"3", "+", "5"}], ")"}]}]}], " ", "=", " ", "24"}], 
   TraditionalForm]], "InlineMath"],
 "."
}], "ManipulateCaption",
 CellChangeTimes->{
  3.35696210375764*^9, {3.4476857725298166`*^9, 3.4476857769204693`*^9}, 
   3.4476859183588743`*^9, {3.447686208095104*^9, 3.447686232642136*^9}, {
   3.448888712538686*^9, 3.448888716822114*^9}},
 CellID->698431408],

Cell["\<\
This Demonstration tries to find all distinct answers for four given cards. \
\>", "ManipulateCaption",
 CellChangeTimes->{
  3.35696210375764*^9, {3.447685921905772*^9, 3.4476859920937214`*^9}, {
   3.447686032187728*^9, 3.447686058078519*^9}, {3.44768628568935*^9, 
   3.4476863043457203`*^9}, {3.447686485940632*^9, 3.4476864871437645`*^9}, {
   3.4476865185502157`*^9, 3.4476865323159285`*^9}, {3.4488887014855804`*^9, 
   3.448888703762808*^9}, {3.4489787037590666`*^9, 3.4489787141810083`*^9}, {
   3.4489787534000096`*^9, 3.448978754556267*^9}},
 CellID->507556328]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 3, $CellContext`b$$ = 
    3, $CellContext`c$$ = 7, $CellContext`d$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 3}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[1]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`b$$], 3}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[2]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`c$$], 7}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[3]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`d$$], 7}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[4]], SynchronousUpdating -> False]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2], 
         Manipulate`Place[3], 
         Manipulate`Place[4]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 3, $CellContext`b$$ = 
        3, $CellContext`c$$ = 7, $CellContext`d$$ = 7}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`aa$, $CellContext`bb$, $CellContext`cc$, \
$CellContext`dd$}, $CellContext`aa$ = $CellContext`card[{
           1, $CellContext`a$$}]; $CellContext`bb$ = $CellContext`card[{
           2, $CellContext`b$$}]; $CellContext`cc$ = $CellContext`card[{
           3, $CellContext`c$$}]; $CellContext`dd$ = $CellContext`card[{
           4, $CellContext`d$$}]; Text[
          Pane[
           Grid[
            Map[$CellContext`outform, 
             DeleteDuplicates[
              Apply[Union, 
               Apply[$CellContext`f, 
                Tuples[{$CellContext`ops, 
                  
                  Permutations[{$CellContext`aa$, $CellContext`bb$, \
$CellContext`cc$, $CellContext`dd$}]}], {1}]], $CellContext`same]], 
            Alignment -> {Right}], Alignment -> {Center, Automatic}, 
           ImageSize -> {360, 250}, Scrollbars -> True]]], 
      "Specifications" :> {{{$CellContext`a$$, 3}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[1]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         1}, {{$CellContext`b$$, 3}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[2]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         2}, {{$CellContext`c$$, 7}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[3]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         3}, {{$CellContext`d$$, 7}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[4]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 4}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          Manipulate`Place[4]}]}, 
      "Options" :> {SynchronousInitialization -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{409., {189., 194.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`outform[
         Pattern[$CellContext`a, 
          Blank[]]] := {
         Text[
          Style[$CellContext`a, Bold, 24]], 
         Text[
          Style["=", 24, Bold, Gray]], 
         Text[
          Style["24", 24, Bold, Blue]]}; $CellContext`cardpicture[{
          Pattern[$CellContext`suit, 
           Blank[]], 
          Pattern[$CellContext`val, 
           Blank[]]}] := Framed[
         Column[{$CellContext`val, $CellContext`suit}, Center, 0, ItemStyle -> 
          Directive[24, "Label", Bold, 
            Switch[$CellContext`suit, 
             
             Alternatives[$CellContext`\[HeartSuit], $CellContext`\
\[DiamondSuit]], 
             Darker[Red, 0.2], 
             
             Alternatives[$CellContext`\[ClubSuit], \
$CellContext`\[SpadeSuit]], Black]]]]; $CellContext`symsuit[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Switch[$CellContext`n, 1, $CellContext`\[HeartSuit], 
         2, $CellContext`\[DiamondSuit], 3, $CellContext`\[ClubSuit], 
         4, $CellContext`\[SpadeSuit]]; $CellContext`symval[
         Pattern[$CellContext`n, 
          Blank[]]] := If[
         And[$CellContext`n <= 10, $CellContext`n > 1], $CellContext`n, 
         Switch[$CellContext`n, 1, $CellContext`A, 11, $CellContext`J, 
          12, $CellContext`Q, 13, K, 
          Blank[], $CellContext`Error]]; Format[
         $CellContext`card[{
           Pattern[$CellContext`s, 
            Blank[]], 
           Pattern[$CellContext`v, 
            Blank[]]}], StandardForm] := $CellContext`cardpicture[{
          $CellContext`symsuit[$CellContext`s], 
          $CellContext`symval[$CellContext`v]}]; $CellContext`allSuit[
         Pattern[$CellContext`i, 
          Blank[]]] := Table[
         $CellContext`card[{$CellContext`i, $CellContext`j}], {$CellContext`j,
           1, 13}]; $CellContext`ops = 
       Tuples[{Plus, Subtract, Times, Divide}, {3}]; $CellContext`eval[
         Pattern[$CellContext`a, 
          Blank[]]] := ReplaceAll[$CellContext`a, {$CellContext`card[{
             Pattern[$CellContext`x, 
              Blank[]], 
             Pattern[$CellContext`y, 
              Blank[]]}] -> $CellContext`y}]; $CellContext`rules = {
        Times -> $CellContext`times, Subtract -> $CellContext`subtract, 
         Plus -> $CellContext`plus, Divide -> $CellContext`divide}; 
      SetAttributes[$CellContext`times, {Flat, Orderless, OneIdentity}]; 
      SetAttributes[$CellContext`plus, {
        Flat, Orderless, OneIdentity}]; $CellContext`divide[
         Pattern[$CellContext`a, 
          Blank[]], 1] := $CellContext`times[$CellContext`a, 
         1]; $CellContext`divide[
         Pattern[$CellContext`a, 
          Blank[]], 
         $CellContext`divide[1, 
          Pattern[$CellContext`b, 
           Blank[]]]] := $CellContext`times[
        1, $CellContext`a, $CellContext`b]; $CellContext`plus[
         Pattern[$CellContext`b, 
          Blank[]], 
         $CellContext`times[-1, 
          Pattern[$CellContext`c, 
           Blank[]]]] := $CellContext`plus[]; $CellContext`same[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]]] := $CellContext`eval[
          
          ReplaceAll[$CellContext`a, $CellContext`rules]] === \
$CellContext`eval[
          ReplaceAll[$CellContext`b, $CellContext`rules]]; 
      Unprotect[Divide, Times, Plus]; Pattern[$CellContext`a, 
          Blank[]]/$CellContext`card[{
          Pattern[$CellContext`b, 
           Blank[]], 
          1}] := $CellContext`a $CellContext`card[{$CellContext`b, 1}]; 
      Pattern[$CellContext`a, 
          Blank[]] (1/$CellContext`card[{
           Pattern[$CellContext`c, 
            Blank[]], 
           1}]) := $CellContext`a $CellContext`card[{$CellContext`c, 1}]; (
         1/$CellContext`card[{
           Pattern[$CellContext`c, 
            Blank[]], 1}]) Pattern[$CellContext`a, 
          Blank[]] := $CellContext`a $CellContext`card[{$CellContext`c, 
           1}]; (-$CellContext`card[{
            Pattern[$CellContext`s1, 
             Blank[]], 
            Pattern[$CellContext`a, 
             Blank[]]}]) ($CellContext`card[{
            Pattern[$CellContext`s2, 
             Blank[]], 
            Pattern[$CellContext`b, 
             Blank[]]}] - $CellContext`card[{
           Pattern[$CellContext`s3, 
            Blank[]], 
           Pattern[$CellContext`c, 
            
            Blank[]]}]) := $CellContext`card[{$CellContext`s1, \
$CellContext`a}] ($CellContext`card[{$CellContext`s3, $CellContext`c}] - \
$CellContext`card[{$CellContext`s2, $CellContext`b}]); 
      Protect[Divide, Times, Plus]; $CellContext`f[{
          Pattern[$CellContext`op1, 
           Blank[]], 
          Pattern[$CellContext`op2, 
           Blank[]], 
          Pattern[$CellContext`op3, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]], 
          Pattern[$CellContext`d, 
           Blank[]]}] := Module[{$CellContext`ans = {}}, If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[
                $CellContext`op3[$CellContext`a, $CellContext`b], \
$CellContext`c], $CellContext`d]]] === 24, $CellContext`ans = 
           Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[
                $CellContext`op3[$CellContext`a, $CellContext`b], \
$CellContext`c], $CellContext`d]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, $CellContext`b], 
               $CellContext`op3[$CellContext`c, $CellContext`d]]]] === 
           24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, $CellContext`b], 
               $CellContext`op3[$CellContext`c, $CellContext`d]]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, 
                $CellContext`op3[$CellContext`b, $CellContext`c]], \
$CellContext`d]]] === 24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, 
                $CellContext`op3[$CellContext`b, $CellContext`c]], \
$CellContext`d]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[$CellContext`a, 
               $CellContext`op2[$CellContext`b, 
                $CellContext`op3[$CellContext`c, $CellContext`d]]]]] === 
           24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[$CellContext`a, 
               $CellContext`op2[$CellContext`b, 
                $CellContext`op3[$CellContext`c, $CellContext`d]]]}]]; \
$CellContext`ans]; Null); Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->73887052]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 3, $CellContext`b$$ = 
    3, $CellContext`c$$ = 8, $CellContext`d$$ = 8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 3}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[1]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`b$$], 3}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[2]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`c$$], 8}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[3]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`d$$], 8}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[4]], SynchronousUpdating -> False]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2], 
         Manipulate`Place[3], 
         Manipulate`Place[4]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 3, $CellContext`b$$ = 
        3, $CellContext`c$$ = 8, $CellContext`d$$ = 8}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`aa$, $CellContext`bb$, $CellContext`cc$, \
$CellContext`dd$}, $CellContext`aa$ = $CellContext`card[{
           1, $CellContext`a$$}]; $CellContext`bb$ = $CellContext`card[{
           2, $CellContext`b$$}]; $CellContext`cc$ = $CellContext`card[{
           3, $CellContext`c$$}]; $CellContext`dd$ = $CellContext`card[{
           4, $CellContext`d$$}]; Text[
          Pane[
           Grid[
            Map[$CellContext`outform, 
             DeleteDuplicates[
              Apply[Union, 
               Apply[$CellContext`f, 
                Tuples[{$CellContext`ops, 
                  
                  Permutations[{$CellContext`aa$, $CellContext`bb$, \
$CellContext`cc$, $CellContext`dd$}]}], {1}]], $CellContext`same]], 
            Alignment -> {Right}], Alignment -> {Center, Automatic}, 
           ImageSize -> {360, 250}, Scrollbars -> True]]], 
      "Specifications" :> {{{$CellContext`a$$, 3}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[1]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         1}, {{$CellContext`b$$, 3}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[2]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         2}, {{$CellContext`c$$, 8}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[3]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         3}, {{$CellContext`d$$, 8}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[4]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 4}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          Manipulate`Place[4]}]}, 
      "Options" :> {SynchronousInitialization -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{409., {189., 194.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`outform[
         Pattern[$CellContext`a, 
          Blank[]]] := {
         Text[
          Style[$CellContext`a, Bold, 24]], 
         Text[
          Style["=", 24, Bold, Gray]], 
         Text[
          Style["24", 24, Bold, Blue]]}; $CellContext`cardpicture[{
          Pattern[$CellContext`suit, 
           Blank[]], 
          Pattern[$CellContext`val, 
           Blank[]]}] := Framed[
         Column[{$CellContext`val, $CellContext`suit}, Center, 0, ItemStyle -> 
          Directive[24, "Label", Bold, 
            Switch[$CellContext`suit, 
             
             Alternatives[$CellContext`\[HeartSuit], $CellContext`\
\[DiamondSuit]], 
             Darker[Red, 0.2], 
             
             Alternatives[$CellContext`\[ClubSuit], \
$CellContext`\[SpadeSuit]], Black]]]]; $CellContext`symsuit[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Switch[$CellContext`n, 1, $CellContext`\[HeartSuit], 
         2, $CellContext`\[DiamondSuit], 3, $CellContext`\[ClubSuit], 
         4, $CellContext`\[SpadeSuit]]; $CellContext`symval[
         Pattern[$CellContext`n, 
          Blank[]]] := If[
         And[$CellContext`n <= 10, $CellContext`n > 1], $CellContext`n, 
         Switch[$CellContext`n, 1, $CellContext`A, 11, $CellContext`J, 
          12, $CellContext`Q, 13, K, 
          Blank[], $CellContext`Error]]; Format[
         $CellContext`card[{
           Pattern[$CellContext`s, 
            Blank[]], 
           Pattern[$CellContext`v, 
            Blank[]]}], StandardForm] := $CellContext`cardpicture[{
          $CellContext`symsuit[$CellContext`s], 
          $CellContext`symval[$CellContext`v]}]; $CellContext`allSuit[
         Pattern[$CellContext`i, 
          Blank[]]] := Table[
         $CellContext`card[{$CellContext`i, $CellContext`j}], {$CellContext`j,
           1, 13}]; $CellContext`ops = 
       Tuples[{Plus, Subtract, Times, Divide}, {3}]; $CellContext`eval[
         Pattern[$CellContext`a, 
          Blank[]]] := ReplaceAll[$CellContext`a, {$CellContext`card[{
             Pattern[$CellContext`x, 
              Blank[]], 
             Pattern[$CellContext`y, 
              Blank[]]}] -> $CellContext`y}]; $CellContext`rules = {
        Times -> $CellContext`times, Subtract -> $CellContext`subtract, 
         Plus -> $CellContext`plus, Divide -> $CellContext`divide}; 
      SetAttributes[$CellContext`times, {Flat, Orderless, OneIdentity}]; 
      SetAttributes[$CellContext`plus, {
        Flat, Orderless, OneIdentity}]; $CellContext`divide[
         Pattern[$CellContext`a, 
          Blank[]], 1] := $CellContext`times[$CellContext`a, 
         1]; $CellContext`divide[
         Pattern[$CellContext`a, 
          Blank[]], 
         $CellContext`divide[1, 
          Pattern[$CellContext`b, 
           Blank[]]]] := $CellContext`times[
        1, $CellContext`a, $CellContext`b]; $CellContext`plus[
         Pattern[$CellContext`b, 
          Blank[]], 
         $CellContext`times[-1, 
          Pattern[$CellContext`c, 
           Blank[]]]] := $CellContext`plus[]; $CellContext`same[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]]] := $CellContext`eval[
          
          ReplaceAll[$CellContext`a, $CellContext`rules]] === \
$CellContext`eval[
          ReplaceAll[$CellContext`b, $CellContext`rules]]; 
      Unprotect[Divide, Times, Plus]; Pattern[$CellContext`a, 
          Blank[]]/$CellContext`card[{
          Pattern[$CellContext`b, 
           Blank[]], 
          1}] := $CellContext`a $CellContext`card[{$CellContext`b, 1}]; 
      Pattern[$CellContext`a, 
          Blank[]] (1/$CellContext`card[{
           Pattern[$CellContext`c, 
            Blank[]], 
           1}]) := $CellContext`a $CellContext`card[{$CellContext`c, 1}]; (
         1/$CellContext`card[{
           Pattern[$CellContext`c, 
            Blank[]], 1}]) Pattern[$CellContext`a, 
          Blank[]] := $CellContext`a $CellContext`card[{$CellContext`c, 
           1}]; (-$CellContext`card[{
            Pattern[$CellContext`s1, 
             Blank[]], 
            Pattern[$CellContext`a, 
             Blank[]]}]) ($CellContext`card[{
            Pattern[$CellContext`s2, 
             Blank[]], 
            Pattern[$CellContext`b, 
             Blank[]]}] - $CellContext`card[{
           Pattern[$CellContext`s3, 
            Blank[]], 
           Pattern[$CellContext`c, 
            
            Blank[]]}]) := $CellContext`card[{$CellContext`s1, \
$CellContext`a}] ($CellContext`card[{$CellContext`s3, $CellContext`c}] - \
$CellContext`card[{$CellContext`s2, $CellContext`b}]); 
      Protect[Divide, Times, Plus]; $CellContext`f[{
          Pattern[$CellContext`op1, 
           Blank[]], 
          Pattern[$CellContext`op2, 
           Blank[]], 
          Pattern[$CellContext`op3, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]], 
          Pattern[$CellContext`d, 
           Blank[]]}] := Module[{$CellContext`ans = {}}, If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[
                $CellContext`op3[$CellContext`a, $CellContext`b], \
$CellContext`c], $CellContext`d]]] === 24, $CellContext`ans = 
           Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[
                $CellContext`op3[$CellContext`a, $CellContext`b], \
$CellContext`c], $CellContext`d]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, $CellContext`b], 
               $CellContext`op3[$CellContext`c, $CellContext`d]]]] === 
           24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, $CellContext`b], 
               $CellContext`op3[$CellContext`c, $CellContext`d]]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, 
                $CellContext`op3[$CellContext`b, $CellContext`c]], \
$CellContext`d]]] === 24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, 
                $CellContext`op3[$CellContext`b, $CellContext`c]], \
$CellContext`d]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[$CellContext`a, 
               $CellContext`op2[$CellContext`b, 
                $CellContext`op3[$CellContext`c, $CellContext`d]]]]] === 
           24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[$CellContext`a, 
               $CellContext`op2[$CellContext`b, 
                $CellContext`op3[$CellContext`c, $CellContext`d]]]}]]; \
$CellContext`ans]; Null); Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->293929453],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1, $CellContext`b$$ = 
    2, $CellContext`c$$ = 3, $CellContext`d$$ = 4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 1}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[1]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`b$$], 2}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[2]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`c$$], 3}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[3]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`d$$], 4}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[4]], SynchronousUpdating -> False]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2], 
         Manipulate`Place[3], 
         Manipulate`Place[4]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1, $CellContext`b$$ = 
        2, $CellContext`c$$ = 3, $CellContext`d$$ = 4}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`aa$, $CellContext`bb$, $CellContext`cc$, \
$CellContext`dd$}, $CellContext`aa$ = $CellContext`card[{
           1, $CellContext`a$$}]; $CellContext`bb$ = $CellContext`card[{
           2, $CellContext`b$$}]; $CellContext`cc$ = $CellContext`card[{
           3, $CellContext`c$$}]; $CellContext`dd$ = $CellContext`card[{
           4, $CellContext`d$$}]; Text[
          Pane[
           Grid[
            Map[$CellContext`outform, 
             DeleteDuplicates[
              Apply[Union, 
               Apply[$CellContext`f, 
                Tuples[{$CellContext`ops, 
                  
                  Permutations[{$CellContext`aa$, $CellContext`bb$, \
$CellContext`cc$, $CellContext`dd$}]}], {1}]], $CellContext`same]], 
            Alignment -> {Right}], Alignment -> {Center, Automatic}, 
           ImageSize -> {360, 250}, Scrollbars -> True]]], 
      "Specifications" :> {{{$CellContext`a$$, 1}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[1]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         1}, {{$CellContext`b$$, 2}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[2]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         2}, {{$CellContext`c$$, 3}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[3]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         3}, {{$CellContext`d$$, 4}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[4]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 4}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          Manipulate`Place[4]}]}, 
      "Options" :> {SynchronousInitialization -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{409., {189., 194.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`outform[
         Pattern[$CellContext`a, 
          Blank[]]] := {
         Text[
          Style[$CellContext`a, Bold, 24]], 
         Text[
          Style["=", 24, Bold, Gray]], 
         Text[
          Style["24", 24, Bold, Blue]]}; $CellContext`cardpicture[{
          Pattern[$CellContext`suit, 
           Blank[]], 
          Pattern[$CellContext`val, 
           Blank[]]}] := Framed[
         Column[{$CellContext`val, $CellContext`suit}, Center, 0, ItemStyle -> 
          Directive[24, "Label", Bold, 
            Switch[$CellContext`suit, 
             
             Alternatives[$CellContext`\[HeartSuit], $CellContext`\
\[DiamondSuit]], 
             Darker[Red, 0.2], 
             
             Alternatives[$CellContext`\[ClubSuit], \
$CellContext`\[SpadeSuit]], Black]]]]; $CellContext`symsuit[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Switch[$CellContext`n, 1, $CellContext`\[HeartSuit], 
         2, $CellContext`\[DiamondSuit], 3, $CellContext`\[ClubSuit], 
         4, $CellContext`\[SpadeSuit]]; $CellContext`symval[
         Pattern[$CellContext`n, 
          Blank[]]] := If[
         And[$CellContext`n <= 10, $CellContext`n > 1], $CellContext`n, 
         Switch[$CellContext`n, 1, $CellContext`A, 11, $CellContext`J, 
          12, $CellContext`Q, 13, K, 
          Blank[], $CellContext`Error]]; Format[
         $CellContext`card[{
           Pattern[$CellContext`s, 
            Blank[]], 
           Pattern[$CellContext`v, 
            Blank[]]}], StandardForm] := $CellContext`cardpicture[{
          $CellContext`symsuit[$CellContext`s], 
          $CellContext`symval[$CellContext`v]}]; $CellContext`allSuit[
         Pattern[$CellContext`i, 
          Blank[]]] := Table[
         $CellContext`card[{$CellContext`i, $CellContext`j}], {$CellContext`j,
           1, 13}]; $CellContext`ops = 
       Tuples[{Plus, Subtract, Times, Divide}, {3}]; $CellContext`eval[
         Pattern[$CellContext`a, 
          Blank[]]] := ReplaceAll[$CellContext`a, {$CellContext`card[{
             Pattern[$CellContext`x, 
              Blank[]], 
             Pattern[$CellContext`y, 
              Blank[]]}] -> $CellContext`y}]; $CellContext`rules = {
        Times -> $CellContext`times, Subtract -> $CellContext`subtract, 
         Plus -> $CellContext`plus, Divide -> $CellContext`divide}; 
      SetAttributes[$CellContext`times, {Flat, Orderless, OneIdentity}]; 
      SetAttributes[$CellContext`plus, {
        Flat, Orderless, OneIdentity}]; $CellContext`divide[
         Pattern[$CellContext`a, 
          Blank[]], 1] := $CellContext`times[$CellContext`a, 
         1]; $CellContext`divide[
         Pattern[$CellContext`a, 
          Blank[]], 
         $CellContext`divide[1, 
          Pattern[$CellContext`b, 
           Blank[]]]] := $CellContext`times[
        1, $CellContext`a, $CellContext`b]; $CellContext`plus[
         Pattern[$CellContext`b, 
          Blank[]], 
         $CellContext`times[-1, 
          Pattern[$CellContext`c, 
           Blank[]]]] := $CellContext`plus[]; $CellContext`same[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]]] := $CellContext`eval[
          
          ReplaceAll[$CellContext`a, $CellContext`rules]] === \
$CellContext`eval[
          ReplaceAll[$CellContext`b, $CellContext`rules]]; 
      Unprotect[Divide, Times, Plus]; Pattern[$CellContext`a, 
          Blank[]]/$CellContext`card[{
          Pattern[$CellContext`b, 
           Blank[]], 
          1}] := $CellContext`a $CellContext`card[{$CellContext`b, 1}]; 
      Pattern[$CellContext`a, 
          Blank[]] (1/$CellContext`card[{
           Pattern[$CellContext`c, 
            Blank[]], 
           1}]) := $CellContext`a $CellContext`card[{$CellContext`c, 1}]; (
         1/$CellContext`card[{
           Pattern[$CellContext`c, 
            Blank[]], 1}]) Pattern[$CellContext`a, 
          Blank[]] := $CellContext`a $CellContext`card[{$CellContext`c, 
           1}]; (-$CellContext`card[{
            Pattern[$CellContext`s1, 
             Blank[]], 
            Pattern[$CellContext`a, 
             Blank[]]}]) ($CellContext`card[{
            Pattern[$CellContext`s2, 
             Blank[]], 
            Pattern[$CellContext`b, 
             Blank[]]}] - $CellContext`card[{
           Pattern[$CellContext`s3, 
            Blank[]], 
           Pattern[$CellContext`c, 
            
            Blank[]]}]) := $CellContext`card[{$CellContext`s1, \
$CellContext`a}] ($CellContext`card[{$CellContext`s3, $CellContext`c}] - \
$CellContext`card[{$CellContext`s2, $CellContext`b}]); 
      Protect[Divide, Times, Plus]; $CellContext`f[{
          Pattern[$CellContext`op1, 
           Blank[]], 
          Pattern[$CellContext`op2, 
           Blank[]], 
          Pattern[$CellContext`op3, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]], 
          Pattern[$CellContext`d, 
           Blank[]]}] := Module[{$CellContext`ans = {}}, If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[
                $CellContext`op3[$CellContext`a, $CellContext`b], \
$CellContext`c], $CellContext`d]]] === 24, $CellContext`ans = 
           Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[
                $CellContext`op3[$CellContext`a, $CellContext`b], \
$CellContext`c], $CellContext`d]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, $CellContext`b], 
               $CellContext`op3[$CellContext`c, $CellContext`d]]]] === 
           24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, $CellContext`b], 
               $CellContext`op3[$CellContext`c, $CellContext`d]]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, 
                $CellContext`op3[$CellContext`b, $CellContext`c]], \
$CellContext`d]]] === 24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, 
                $CellContext`op3[$CellContext`b, $CellContext`c]], \
$CellContext`d]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[$CellContext`a, 
               $CellContext`op2[$CellContext`b, 
                $CellContext`op3[$CellContext`c, $CellContext`d]]]]] === 
           24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[$CellContext`a, 
               $CellContext`op2[$CellContext`b, 
                $CellContext`op3[$CellContext`c, $CellContext`d]]]}]]; \
$CellContext`ans]; Null); Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->330279151],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1, $CellContext`b$$ = 
    2, $CellContext`c$$ = 3, $CellContext`d$$ = 12, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 1}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[1]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`b$$], 2}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[2]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`c$$], 3}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[3]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`d$$], 12}, 
      Dynamic[
       MapIndexed[First[#2] -> #& , 
        $CellContext`allSuit[4]], SynchronousUpdating -> False]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2], 
         Manipulate`Place[3], 
         Manipulate`Place[4]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1, $CellContext`b$$ = 
        2, $CellContext`c$$ = 3, $CellContext`d$$ = 12}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`aa$, $CellContext`bb$, $CellContext`cc$, \
$CellContext`dd$}, $CellContext`aa$ = $CellContext`card[{
           1, $CellContext`a$$}]; $CellContext`bb$ = $CellContext`card[{
           2, $CellContext`b$$}]; $CellContext`cc$ = $CellContext`card[{
           3, $CellContext`c$$}]; $CellContext`dd$ = $CellContext`card[{
           4, $CellContext`d$$}]; Text[
          Pane[
           Grid[
            Map[$CellContext`outform, 
             DeleteDuplicates[
              Apply[Union, 
               Apply[$CellContext`f, 
                Tuples[{$CellContext`ops, 
                  
                  Permutations[{$CellContext`aa$, $CellContext`bb$, \
$CellContext`cc$, $CellContext`dd$}]}], {1}]], $CellContext`same]], 
            Alignment -> {Right}], Alignment -> {Center, Automatic}, 
           ImageSize -> {360, 250}, Scrollbars -> True]]], 
      "Specifications" :> {{{$CellContext`a$$, 1}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[1]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         1}, {{$CellContext`b$$, 2}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[2]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         2}, {{$CellContext`c$$, 3}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[3]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 
         3}, {{$CellContext`d$$, 12}, 
         Dynamic[
          MapIndexed[First[#2] -> #& , 
           $CellContext`allSuit[4]], SynchronousUpdating -> False], 
         ControlType -> PopupMenu, ControlPlacement -> 4}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          Manipulate`Place[4]}]}, 
      "Options" :> {SynchronousInitialization -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{409., {190., 195.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`outform[
         Pattern[$CellContext`a, 
          Blank[]]] := {
         Text[
          Style[$CellContext`a, Bold, 24]], 
         Text[
          Style["=", 24, Bold, Gray]], 
         Text[
          Style["24", 24, Bold, Blue]]}; $CellContext`cardpicture[{
          Pattern[$CellContext`suit, 
           Blank[]], 
          Pattern[$CellContext`val, 
           Blank[]]}] := Framed[
         Column[{$CellContext`val, $CellContext`suit}, Center, 0, ItemStyle -> 
          Directive[24, "Label", Bold, 
            Switch[$CellContext`suit, 
             
             Alternatives[$CellContext`\[HeartSuit], $CellContext`\
\[DiamondSuit]], 
             Darker[Red, 0.2], 
             
             Alternatives[$CellContext`\[ClubSuit], \
$CellContext`\[SpadeSuit]], Black]]]]; $CellContext`symsuit[
         Pattern[$CellContext`n, 
          Blank[]]] := 
       Switch[$CellContext`n, 1, $CellContext`\[HeartSuit], 
         2, $CellContext`\[DiamondSuit], 3, $CellContext`\[ClubSuit], 
         4, $CellContext`\[SpadeSuit]]; $CellContext`symval[
         Pattern[$CellContext`n, 
          Blank[]]] := If[
         And[$CellContext`n <= 10, $CellContext`n > 1], $CellContext`n, 
         Switch[$CellContext`n, 1, $CellContext`A, 11, $CellContext`J, 
          12, $CellContext`Q, 13, K, 
          Blank[], $CellContext`Error]]; Format[
         $CellContext`card[{
           Pattern[$CellContext`s, 
            Blank[]], 
           Pattern[$CellContext`v, 
            Blank[]]}], StandardForm] := $CellContext`cardpicture[{
          $CellContext`symsuit[$CellContext`s], 
          $CellContext`symval[$CellContext`v]}]; $CellContext`allSuit[
         Pattern[$CellContext`i, 
          Blank[]]] := Table[
         $CellContext`card[{$CellContext`i, $CellContext`j}], {$CellContext`j,
           1, 13}]; $CellContext`ops = 
       Tuples[{Plus, Subtract, Times, Divide}, {3}]; $CellContext`eval[
         Pattern[$CellContext`a, 
          Blank[]]] := ReplaceAll[$CellContext`a, {$CellContext`card[{
             Pattern[$CellContext`x, 
              Blank[]], 
             Pattern[$CellContext`y, 
              Blank[]]}] -> $CellContext`y}]; $CellContext`rules = {
        Times -> $CellContext`times, Subtract -> $CellContext`subtract, 
         Plus -> $CellContext`plus, Divide -> $CellContext`divide}; 
      SetAttributes[$CellContext`times, {Flat, Orderless, OneIdentity}]; 
      SetAttributes[$CellContext`plus, {
        Flat, Orderless, OneIdentity}]; $CellContext`divide[
         Pattern[$CellContext`a, 
          Blank[]], 1] := $CellContext`times[$CellContext`a, 
         1]; $CellContext`divide[
         Pattern[$CellContext`a, 
          Blank[]], 
         $CellContext`divide[1, 
          Pattern[$CellContext`b, 
           Blank[]]]] := $CellContext`times[
        1, $CellContext`a, $CellContext`b]; $CellContext`plus[
         Pattern[$CellContext`b, 
          Blank[]], 
         $CellContext`times[-1, 
          Pattern[$CellContext`c, 
           Blank[]]]] := $CellContext`plus[]; $CellContext`same[
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]]] := $CellContext`eval[
          
          ReplaceAll[$CellContext`a, $CellContext`rules]] === \
$CellContext`eval[
          ReplaceAll[$CellContext`b, $CellContext`rules]]; 
      Unprotect[Divide, Times, Plus]; Pattern[$CellContext`a, 
          Blank[]]/$CellContext`card[{
          Pattern[$CellContext`b, 
           Blank[]], 
          1}] := $CellContext`a $CellContext`card[{$CellContext`b, 1}]; 
      Pattern[$CellContext`a, 
          Blank[]] (1/$CellContext`card[{
           Pattern[$CellContext`c, 
            Blank[]], 
           1}]) := $CellContext`a $CellContext`card[{$CellContext`c, 1}]; (
         1/$CellContext`card[{
           Pattern[$CellContext`c, 
            Blank[]], 1}]) Pattern[$CellContext`a, 
          Blank[]] := $CellContext`a $CellContext`card[{$CellContext`c, 
           1}]; (-$CellContext`card[{
            Pattern[$CellContext`s1, 
             Blank[]], 
            Pattern[$CellContext`a, 
             Blank[]]}]) ($CellContext`card[{
            Pattern[$CellContext`s2, 
             Blank[]], 
            Pattern[$CellContext`b, 
             Blank[]]}] - $CellContext`card[{
           Pattern[$CellContext`s3, 
            Blank[]], 
           Pattern[$CellContext`c, 
            
            Blank[]]}]) := $CellContext`card[{$CellContext`s1, \
$CellContext`a}] ($CellContext`card[{$CellContext`s3, $CellContext`c}] - \
$CellContext`card[{$CellContext`s2, $CellContext`b}]); 
      Protect[Divide, Times, Plus]; $CellContext`f[{
          Pattern[$CellContext`op1, 
           Blank[]], 
          Pattern[$CellContext`op2, 
           Blank[]], 
          Pattern[$CellContext`op3, 
           Blank[]]}, {
          Pattern[$CellContext`a, 
           Blank[]], 
          Pattern[$CellContext`b, 
           Blank[]], 
          Pattern[$CellContext`c, 
           Blank[]], 
          Pattern[$CellContext`d, 
           Blank[]]}] := Module[{$CellContext`ans = {}}, If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[
                $CellContext`op3[$CellContext`a, $CellContext`b], \
$CellContext`c], $CellContext`d]]] === 24, $CellContext`ans = 
           Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[
                $CellContext`op3[$CellContext`a, $CellContext`b], \
$CellContext`c], $CellContext`d]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, $CellContext`b], 
               $CellContext`op3[$CellContext`c, $CellContext`d]]]] === 
           24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, $CellContext`b], 
               $CellContext`op3[$CellContext`c, $CellContext`d]]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, 
                $CellContext`op3[$CellContext`b, $CellContext`c]], \
$CellContext`d]]] === 24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[
               $CellContext`op2[$CellContext`a, 
                $CellContext`op3[$CellContext`b, $CellContext`c]], \
$CellContext`d]}]]; If[Quiet[
             $CellContext`eval[
              $CellContext`op1[$CellContext`a, 
               $CellContext`op2[$CellContext`b, 
                $CellContext`op3[$CellContext`c, $CellContext`d]]]]] === 
           24, $CellContext`ans = Union[$CellContext`ans, {
              $CellContext`op1[$CellContext`a, 
               $CellContext`op2[$CellContext`b, 
                $CellContext`op3[$CellContext`c, $CellContext`d]]]}]]; \
$CellContext`ans]; Null); Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->73866103]
}, Open  ]],

Cell["", "DetailsSection"],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["Puzzle", "SearchTerms",
 CellChangeTimes->{
  3.35696210375764*^9, {3.4476864161589355`*^9, 3.447686433502796*^9}, {
   3.448888728614293*^9, 3.4488887290403357`*^9}},
 CellID->688161339],

Cell["Calculating 24", "SearchTerms",
 CellChangeTimes->{
  3.35696210375764*^9, {3.4476864161589355`*^9, 3.447686433502796*^9}, {
   3.448888728614293*^9, 3.4488887305484867`*^9}},
 CellID->411542782]
}, Open  ]],

Cell["", "RelatedLinksSection"],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Xiangdong Wen",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Xiangdong+Wen"],
     None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Xiangdong+Wen"]
}], "Author",
 CellChangeTimes->{
  3.35696210375764*^9, {3.4476863609085817`*^9, 3.4476863678617516`*^9}, 
   3.4477644188677654`*^9, {3.4477675794817433`*^9, 3.4477675997943735`*^9}},
 CellID->938697876]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 930},
WindowMargins->{{274, Automatic}, {Automatic, 42}},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 15, 2011)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[78317, 1889, 312, 8, 22, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[78632, 1899, 678, 16, 22, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[79313, 1917, 340, 11, 22, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[79656, 1930, 637, 15, 22, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[80296, 1947, 844, 21, 22, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[81143, 1970, 369, 9, 22, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[81515, 1981, 1464, 31, 22, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[82982, 2014, 908, 21, 22, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 85352, 2089},
 {"RotateAndZoomIn3D", 85461, 2092},
 {"DragLocators", 85571, 2095},
 {"CreateAndDeleteLocators", 85687, 2098},
 {"SliderZoom", 85801, 2101},
 {"GamepadControls", 85907, 2104},
 {"AutomaticAnimation", 86020, 2107},
 {"BookmarkAnimation", 86137, 2110}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 129, 2, 74, "DemoTitle"],
Cell[699, 26, 33, 0, 272, "InitializationSection"],
Cell[CellGroupData[{
Cell[757, 30, 29, 0, 194, "ManipulateSection"],
Cell[CellGroupData[{
Cell[811, 34, 19223, 484, 1048, "Input"],
Cell[20037, 520, 11178, 257, 395, "Output",
 CellID->33562932]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31261, 783, 36, 0, 166, "ManipulateCaptionSection"],
Cell[31300, 785, 521, 9, 37, "ManipulateCaption",
 CellID->45445021],
Cell[31824, 796, 362, 8, 22, "ManipulateCaption",
 CellID->48921836],
Cell[32189, 806, 577, 16, 23, "ManipulateCaption",
 CellID->698431408],
Cell[32769, 824, 582, 10, 22, "ManipulateCaption",
 CellID->507556328]
}, Open  ]],
Cell[CellGroupData[{
Cell[33388, 839, 28, 0, 168, "ThumbnailSection"],
Cell[33419, 841, 11178, 257, 395, "Output",
 CellID->73887052]
}, Open  ]],
Cell[CellGroupData[{
Cell[44634, 1103, 28, 0, 138, "SnapshotsSection"],
Cell[44665, 1105, 11179, 257, 395, "Output",
 CellID->293929453],
Cell[55847, 1364, 11179, 257, 395, "Output",
 CellID->330279151],
Cell[67029, 1623, 11182, 257, 397, "Output",
 CellID->73866103]
}, Open  ]],
Cell[78226, 1883, 26, 0, 332, "DetailsSection"],
Cell[CellGroupData[{
Cell[78277, 1887, 37, 0, 108, "ControlSuggestionsSection"],
Cell[78317, 1889, 312, 8, 22, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[78632, 1899, 678, 16, 22, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[79313, 1917, 340, 11, 22, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[79656, 1930, 637, 15, 22, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[80296, 1947, 844, 21, 22, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[81143, 1970, 369, 9, 22, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[81515, 1981, 1464, 31, 22, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[82982, 2014, 908, 21, 22, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83927, 2040, 30, 0, 152, "SearchTermsSection"],
Cell[83960, 2042, 193, 4, 22, "SearchTerms",
 CellID->688161339],
Cell[84156, 2048, 201, 4, 22, "SearchTerms",
 CellID->411542782]
}, Open  ]],
Cell[84372, 2055, 31, 0, 138, "RelatedLinksSection"],
Cell[CellGroupData[{
Cell[84428, 2059, 25, 0, 124, "AuthorSection"],
Cell[84456, 2061, 491, 13, 22, "Author",
 CellID->938697876]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
